/*
 * PersistentMem.cpp
 *
 *  Created on: Jul 20, 2018
 *      Author: z003vxjv
 */

#include "PersistentMem.h"

extern "C"
{
#include "ti_fee.h"
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
PersistentMem*   PersistentMem::_pPersistentMem = nullptr;
uint8_t          PersistentMem::_arBuf[kMaxPMemSize];



///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
PersistentMem* PersistentMem::GetInstance()      //Singleton
{
    if (_pPersistentMem == nullptr)
    {
        TI_Fee_Init();
        _pPersistentMem = new PersistentMem;

    }
    return _pPersistentMem;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
bool PersistentMem::WriteToFlash()
{
    Std_ReturnType nRetVal = TI_Fee_WriteSync(7, _arBuf);
    return true;
}

///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
bool PersistentMem::ReadFromFlash()
{
    Std_ReturnType nRetVal = TI_Fee_ReadSync(7, 0, _arBuf, kMaxPMemSize);
    return true;
}
